type EventSpeaker {
    """
    User id associated with this speaker
    """
    userId: ID!

    """
    Event id that this user is speaking at
    """
    eventId: ID!

    """
    The related user account associated with the speaker
    """
    user: User

    """
    Name set by the organizer of the event
    """
    name: String

    """
    Description set by the organizer of the event
    """
    description: String

    """
    Title set by the organizer of the event
    """
    title: String

    """
    Picture set by the organizer of the event
    """
    picture: String
}

input SpeakerForm {
    eventId: String!
    name: String!
    title: String!
    description: String!
    picture: String!

    """
    This is for matching the speaker to an account
    """
    email: String!
}

input UpdateSpeaker {
    name: String
    title: String
    description: String
    picture: String
    userId: String!
    eventId: String!
}

input DeleteSpeaker {
    eventId: String!
    userId: String!
}

type Mutation {
    addSpeaker(input: SpeakerForm): EventSpeaker
    removeSpeaker(input: UpdateSpeaker): EventSpeaker
    updateSpeaker(input: DeleteSpeaker): EventSpeaker
}
