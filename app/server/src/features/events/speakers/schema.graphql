type EventSpeaker {
    """
    Speaker id
    """
    speakerId: String!

    """
    email of the speaker
    """
    email: String

    """
    Event id that this user is speaking at
    """
    id: ID

    """
    The related user account associated with the speaker
    """
    user: User

    """
    Name set by the organizer of the event
    """
    name: String

    """
    Description set by the organizer of the event
    """
    description: String

    """
    Title set by the organizer of the event
    """
    title: String

    """
    Picture set by the organizer of the event
    """
    pictureUrl: String
}

input SpeakerForm {
    id: String!
    name: String!
    title: String!
    description: String!
    pictureUrl: String!

    """
    This is for matching the speaker to an account
    """
    email: String!
}

input UpdateSpeaker {
    name: String
    title: String
    description: String
    pictureUrl: String
    email: String
    speakerId: String!
    id: String!
}

input DeleteSpeaker {
    """
    Necessary for verifying user permissions
    """
    id: String!
    speakerId: String!
}

type Mutation {
    addSpeaker(input: SpeakerForm): EventSpeaker
    removeSpeaker(input: DeleteSpeaker): EventSpeaker
    updateSpeaker(input: UpdateSpeaker): EventSpeaker
}
